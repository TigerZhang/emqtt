%% -*- mode: erlang;erlang-indent-level: 4;indent-tabs-mode: nil -*-
%% ex: ft=erlang ts=4 sw=4 et
[{kernel,
    [{start_timer, true},
        {start_pg2, true}
    ]},
    {sasl, [
        {sasl_error_logger, {file, "log/emqtt_sasl.log"}}
    ]},
    {mnesia, [
        {dir, "var/data"}
    ]},
    {lager, [
        {error_logger_redirect, false},
        {crash_log, "log/emqtt_crash.log"},
        {handlers, [
            {lager_console_backend, info},
            {lager_file_backend, [
                {file, "log/emqtt_error.log"},
                {level, error},
                {size, 10485760},
                {date, "$D0"},
                {count, 5}
            ]},
            {lager_file_backend, [
                {file, "log/emqtt_info.log"},
                {level, info},
                {size, 10485760},
                {date, "$D0"},
                {count, 5}
            ]}
        ]}
    ]},
    {emqtt, [
        {auth, {anonymous, []}}, %internal, anonymous
        {listeners, [
            {1883, [
                binary,
                {packet, raw},
                {reuseaddr, true},
                {backlog, 128},
                {nodelay, true}
            ]}
        ]}
    ]},
    {msgbus_amqp_proxy, [
        {rabbitmqs, [
            {msgbus_rabbitmq_local, [
                {name, "msgbus_rabbitmq_local"},
                {exchange, <<"msgbus_amqp_proxy">>},
                {amqp_user, <<"guest">>},
                {amqp_pass, <<"guest">>},
                {amqp_vhost, <<"/">>},
                {amqp_host, "localhost"},
                {amqp_port, 5672}
            ]}
        ]},
        {outgoing_queues, [
            {<<"1">>, <<"msgbus_mqtt_command_connect">>},
            {<<"3">>, <<"msgbus_mqtt_command_publish">>},
            {<<"4">>, <<"msgbus_mqtt_command_puback">>},
            {<<"5">>, <<"msgbus_mqtt_command_pubrec">>},
            {<<"6">>, <<"msgbus_mqtt_command_pubrel">>},
            {<<"7">>, <<"msgbus_mqtt_command_pubcomp">>},
            {<<"8">>, <<"msgbus_mqtt_command_subscribe">>},
            {<<"10">>, <<"msgbus_mqtt_command_unsubscribe">>},
            {<<"12">>, <<"msgbus_mqtt_command_pingreq">>},
            {<<"14">>, <<"msgbus_mqtt_command_disconnect">>}
        ]},
        {incoming_queues, [
            {<<"msgbus_frontend_key_">>, <<"msgbus_frontend_queue_">>}
        ]},
        {node_tag, <<"front1">>}
    ]}
].

